apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
version = "1.0.0"
android {
  compileSdkVersion 22
  buildToolsVersion "22.0.0"
  resourcePrefix "floatingactionbutton__"
  defaultConfig {
    minSdkVersion 14
    targetSdkVersion 22
    versionName project.VERSION_NAME
    versionCode Integer.parseInt(project.VERSION_CODE)
    consumerProguardFiles 'consumer-proguard-rules.pro'
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
}

dependencies {
  compile 'com.android.support:support-annotations:22.0.0'
}
apply from: './gradle-mvn-push.gradle'

def siteUrl = 'https://github.com/trity1993/FloatingActionButton'   // Homepage URL of the library
def gitUrl = 'https://github.com/trity1993/FloatingActionButton.git'// Git repository URL
group = "cc.trity.floatingactionbutton" // Maven Group ID for the artifact
install {
  repositories.mavenInstaller {
    // This generates POM.xml with proper parameters
    pom {
      project {
        packaging 'aar'
        // Add your description here
        name 'Android FloatActionButton Widget' 	// Add your description here
        url siteUrl
        // Set your license
        licenses {
          license {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }
        developers {
          developer {
            id 'trity93'		//the basic information
            name 'trity'
            email 'trity93@gmail.com'
          }
        }
        scm {
          connection gitUrl
          developerConnection gitUrl
          url siteUrl
        }
      }
    }
  }
}
task sourcesJar(type: Jar) {
  from android.sourceSets.main.java.srcDirs
  classifier = 'sources'
}
task javadoc(type: Javadoc) {
  source = android.sourceSets.main.java.srcDirs
  classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}
artifacts {
  archives javadocJar
  archives sourcesJar
}
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
  user = properties.getProperty("bintray.user")
  key = properties.getProperty("bintray.apikey")
  configurations = ['archives']
  pkg {
    repo = "maven"
    name = "FloatingActionButton"	//发布到JCenter上的项目名字
    websiteUrl = siteUrl
    vcsUrl = gitUrl
    licenses = ["Apache-2.0"]
    publish = true
  }
}


